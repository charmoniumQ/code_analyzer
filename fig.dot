strict digraph "" {
	plotSaveConditionalColoc -> cell;
	plotSaveConditionalColoc -> error;
	plotSaveConditionalColoc -> moviesPerML;
	plotSaveConditionalColoc -> isa;
	plotSaveConditionalColoc -> NaN;
	plotSaveConditionalColoc -> disp;
	getMultiplicity -> sdata;
	getMultiplicity -> data;
	getMultiplicity -> isfinite;
	getMultiplicity -> isinteger;
	getMultiplicity -> isempty;
	filterGauss2D -> conv2;
	filterGauss2D -> padarrayXT;
	perpVector -> error;
	perpVector -> repmat;
	perpVector -> sum;
	importCellMaskMLMD -> isa;
	importCellMaskMLMD -> disp;
	importCellMaskMLMD -> cellfun;
	importCellMaskMLMD -> processes_;
	importCellMaskMLMD -> parseProcessParams;
	importCellMaskMLMD -> getProcess;
	importCellMaskMLMD -> ImportCellMaskProcess;
	importCellMaskMLMD -> getProcessIndex;
	simulatePt2Pt2BlobCondColoc -> cell;
	simulatePt2Pt2BlobCondColoc -> repmat;
	simulatePt2Pt2BlobCondColoc -> condColocPt2Pt2Blob;
	simulatePt2Pt2BlobCondColoc -> colocDistThresh;
	simulatePt2Pt2BlobCondColoc -> SegIdx;
	simulatePt2Pt2BlobCondColoc -> regionprops;
	simulatePt2Pt2BlobCondColoc -> logical;
	simulatePt2Pt2BlobCondColoc -> allTarPositions;
	simulatePt2Pt2BlobCondColoc -> vertcat;
	simulatePt2Pt2BlobCondColoc -> rand;
	simulatePt2Pt2BlobCondColoc -> size;
	simulatePt2Pt2BlobCondColoc -> datasample;
	simulatePt2Pt2BlobCondColoc -> maskWithoutBlobsAndRefCoords;
	simulatePt2Pt2BlobCondColoc -> erodedMask;
	simulatePt2Pt2BlobCondColoc -> imdilate;
	simulatePt2Pt2BlobCondColoc -> strel;
	simulatePt2Pt2BlobCondColoc -> refDetectMask;
	simulatePt2Pt2BlobCondColoc -> sub2ind;
	simulatePt2Pt2BlobCondColoc -> round;
	simulatePt2Pt2BlobCondColoc -> allRefPositions;
	simulatePt2Pt2BlobCondColoc -> colocDistRange;
	simulatePt2Pt2BlobCondColoc -> repRefNotColocWithCond;
	simulatePt2Pt2BlobCondColoc -> refNotColocWithCondPositions;
	simulatePt2Pt2BlobCondColoc -> warning;
	simulatePt2Pt2BlobCondColoc -> tarColocWithCondNotWithRefPositions;
	simulatePt2Pt2BlobCondColoc -> segBoundariesNoRefColoc;
	simulatePt2Pt2BlobCondColoc -> knnsearch;
	simulatePt2Pt2BlobCondColoc -> repRefColocWithCondPositions;
	simulatePt2Pt2BlobCondColoc -> refColocWithCondPositions;
	simulatePt2Pt2BlobCondColoc -> maskWithoutBlobsCoords;
	simulatePt2Pt2BlobCondColoc -> "segBoundaries{i}";
	simulatePt2Pt2BlobCondColoc -> imerode;
	simulatePt2Pt2BlobCondColoc -> parse;
	simulatePt2Pt2BlobCondColoc -> addParameter;
	simulatePt2Pt2BlobCondColoc -> addRequired;
	simulatePt2Pt2BlobCondColoc -> isvector;
	simulatePt2Pt2BlobCondColoc -> isscalar;
	simulatePt2Pt2BlobCondColoc -> isdouble;
	simulatePt2Pt2BlobCondColoc -> islogical;
	fsFigure -> error;
	fsFigure -> figure;
	fsFigure -> sizeFraction;
	fsFigure -> get;
	importCellMaskOO -> cell;
	importCellMaskOO -> isa;
	importCellMaskOO -> parseProcessParams;
	importCellMaskOO -> size;
	importCellMaskOO -> parse;
	importCellMaskOO -> addRequired;
	importCellMaskOO -> mkClrDir;
	importCellMaskOO -> numel;
	importCellMaskOO -> isfield;
	importCellMaskOO -> getOwnerAndProcess;
	importCellMaskOO -> addOptional;
	normList -> repmat;
	normList -> sum;
	normList -> size;
	normList -> normedVectors;
	normList -> isnan;
	normList -> bsxfun;
	normList -> listOfNorms;
	normList -> vectors;
	normList -> verLessThan;
	bfUpgradeCheck -> addOptional;
	bfUpgradeCheck -> fprintf;
	bfUpgradeCheck -> is_octave;
	bfUpgradeCheck -> alreadyChecked;
	bfUpgradeCheck -> any;
	bfUpgradeCheck -> strcmpi;
}
